//
//  CourseGList.m
//  Principia
//
//  Created by Austin Dauterman on 4/27/13.
//
//

#import "CourseGList.h"
#import "RegexParser.h"
#import "SMWebRequest.h"

@interface CourseGList ()

@end

@implementation CourseGList
@synthesize tableViewArray, headers, instructorname, instemail, pic, rowcount;

- (id)initWithStyle:(UITableViewStyle)style
{
    self = [super initWithStyle:UITableViewStyleGrouped];
    if (self) {
        // Custom initialization
    }
    return self;
}

- (void) initCourseSummary:(int) iCrn{
    classcrn = iCrn;
}

- (NSString *)dataFilePath {
    NSArray *paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
    NSString *documentsDirectory = [paths objectAtIndex:0];
    NSLog(@"%@",documentsDirectory);
    return [documentsDirectory stringByAppendingPathComponent:kFilename];
}

- (BOOL)execSearch {
    BOOL found=false;
    
    if (tableViewArray == nil)
        tableViewArray = [NSMutableArray new];
    else
        [tableViewArray removeAllObjects];
    
    if (sqlite3_open([[self dataFilePath] UTF8String], &database) != SQLITE_OK) {
        sqlite3_close(database);
        NSAssert(0, @"Failed to open database");
    }
    //add days, time, bldg, room, sh
    NSString *select = [NSString stringWithFormat:@"SELECT title, crn, courses.num, sec, instructor, subject, description, days, days_2,  time, time_2, registered, fee, prereq, bldg, bldg_2, room, room_2, open_to, attribute_1, attribute_2, attribute_3, attribute_4 from courses, course_descriptions b where courses.subject = b.subj and courses.num = b.num and crn = %d", classcrn];
    //NSString *select = [NSString stringWithFormat:@"SELECT title, crn, number, section, intructor, subject from courses where title = '%@' or crn = %@ or number = %@ or section = %@ or intructor = '%@'", self.searchText, self.searchText, self.searchText, self,searchText, self.searchText, self.searchText];
    sqlite3_stmt *statement;
    if (sqlite3_prepare_v2( database, [select UTF8String],-1, &statement, nil) == SQLITE_OK) {
        // sqlite3_bind_text(statement, 1, [self.searchText UTF8String],-1,NULL);
        while (sqlite3_step(statement) == SQLITE_ROW) {
            
            char *titlec = (char *)sqlite3_column_text(statement, 0);
            if (titlec==nil) titlec="";
            NSString *title = [NSString stringWithUTF8String:titlec];
            
            int crn=sqlite3_column_int(statement,1);
            int number=sqlite3_column_int(statement,2);
            
            char *sectionc = (char *)sqlite3_column_text(statement, 3);
            if (sectionc==nil) sectionc="";
            NSString *section = [NSString stringWithUTF8String:sectionc];
            
            char *instructorc = (char *)sqlite3_column_text(statement, 4);
            if (instructorc==nil) instructorc="";
            NSString *instructor = [NSString stringWithUTF8String:instructorc];
            instructorname = instructor;
            
            char *subjectc = (char *)sqlite3_column_text(statement, 5);
            if (subjectc==nil) subjectc="";
            NSString *subject = [NSString stringWithUTF8String:subjectc];
            
            char *descripc = (char *)sqlite3_column_text(statement, 6);
            if (descripc==nil) descripc="";
            NSString *descrip = [NSString stringWithUTF8String:descripc];
            
            char *daysc = (char *)sqlite3_column_text(statement, 7);
            if (daysc==nil) daysc="";
            NSString *days = [NSString stringWithUTF8String:daysc];
            
            char *days2c = (char *)sqlite3_column_text(statement, 8);
            if (days2c==nil) days2c="";
            NSString *days2 = [NSString stringWithUTF8String:days2c];
            
            
            char *timec = (char *)sqlite3_column_text(statement, 9);
            if (timec==nil) timec="";
            NSString *time = [NSString stringWithUTF8String:timec];
            
            char *time2c = (char *)sqlite3_column_text(statement, 10);
            if (time2c==nil) time2c="";
            NSString *time2 = [NSString stringWithUTF8String:time2c];
            
            int registered=sqlite3_column_int(statement,11);
            //int limit=sqlite3_column_int(statement,12);
            int limit = 20;
            int fee=sqlite3_column_int(statement,12);
            
            char *prereqc = (char *)sqlite3_column_text(statement, 13);
            if (prereqc==nil) prereqc="";
            NSString *prereq = [NSString stringWithUTF8String:prereqc];
            
            char *bldgc = (char *)sqlite3_column_text(statement, 14);
            if (bldgc==nil) bldgc="";
            NSString *bldg = [NSString stringWithUTF8String:bldgc];
            
            char *bldg2c = (char *)sqlite3_column_text(statement, 15);
            if (bldg2c==nil) bldg2c="";
            NSString *bldg2 = [NSString stringWithUTF8String:bldg2c];
            
            char *roomc = (char *)sqlite3_column_text(statement, 16);
            if (roomc==nil) roomc="";
            NSString *room = [NSString stringWithUTF8String:roomc];
            
            char *room2c = (char *)sqlite3_column_text(statement, 17);
            if (room2c==nil) room2c="";
            NSString *room2 = [NSString stringWithUTF8String:room2c];
            
            char *opentoc = (char *)sqlite3_column_text(statement, 18);
            if (opentoc==nil) opentoc="";
            NSString *opento = [NSString stringWithUTF8String:opentoc];
            
            char *att1c = (char *)sqlite3_column_text(statement, 19);
            if (att1c==nil) att1c="";
            NSString *att1 = [NSString stringWithUTF8String:att1c];
            
            char *att2c = (char *)sqlite3_column_text(statement, 20);
            if (att2c==nil) att2c="";
            NSString *att2 = [NSString stringWithUTF8String:att2c];
            
            char *att3c = (char *)sqlite3_column_text(statement, 21);
            if (att3c==nil) att3c="";
            NSString *att3 = [NSString stringWithUTF8String:att3c];
            
            char *att4c = (char *)sqlite3_column_text(statement, 22);
            if (att4c==nil) att4c="";
            NSString *att4 = [NSString stringWithUTF8String:att4c];
            
            
            NSDictionary *row1=[[NSDictionary alloc] initWithObjectsAndKeys:[NSNumber numberWithInt:crn], @"CRN", [NSNumber numberWithInt:number], @"NUMBER", section, @"SECTION", instructor, @"INSTRUCTOR", title, @"TITLE", subject, @"SUBJECT", descrip, @"DESCRIP", days, @"DAYS", days2, @"DAYS2", time, @"TIME", time2, @"TIME2", [NSNumber numberWithInt:registered], @"REGISTERED", [NSNumber numberWithInt:limit], @"LIMIT", [NSNumber numberWithInt:fee], @"FEE", prereq, @"PREREQ", bldg, @"BLDG", bldg2, @"BLDG2", room, @"ROOM", room2, @"ROOM2", opento, @"OPENTO", att1, @"ATT1", att2, @"ATT2", att3, @"ATT3", att4, @"ATT4", nil];
            [tableViewArray addObject:row1];
            found=TRUE;
            //[row1 release];
        }
        sqlite3_finalize(statement);
    }
    
    sqlite3_close(database);
    return found;
}

-(void)requestError
{
    
}

-(void)ParseFlashy:(NSData *)data
{
    
    NSMutableDictionary *rowentry;
    RegexParser *parse = [[RegexParser alloc] init];
    
    NSArray *testarr = [[NSArray alloc] initWithObjects:
                        @"mailto:.+'",
                        @"/phone/new_faces_pictures/Andover_Extract_Files/\\d+\\.jpg",
                        @"/phone/new_faces_pictures/\\d+\\.jpg",
                        nil];
    
    NSArray *DirtyParams = [[NSArray alloc] initWithObjects:
                            @"mailto:",
                            nil];
    
    NSArray *keys = [[NSArray alloc] initWithObjects:
                     @"email",
                     @"pic",
                     @"secpic",
                     nil];
    [parse AddPatterns:testarr];
    [parse AddDirtyParams:DirtyParams];
    
    NSString *HTML = [[NSString alloc] initWithData:data encoding:NSUTF8StringEncoding];
    
    NSArray *Sepstr = [HTML componentsSeparatedByString:@"<!-- Info for "];
    
    for (int index = 1; index<[Sepstr count];index++)
    {
        NSString *nothing = @"N/A";
        NSString *StrAnlz = [Sepstr objectAtIndex:index];
        rowentry = [[NSMutableDictionary alloc] initWithObjects:[parse Output:StrAnlz] forKeys:keys];
        NSString *picstr = [rowentry objectForKey:@"pic"];
        instemail = [rowentry objectForKey:@"email"];
        NSString *scdpic = [rowentry objectForKey:@"secpic"];
        if ([picstr isEqualToString:nothing]){
            picstr = scdpic;
        }
        picstr = [NSString stringWithFormat:@"http://prinweb.prin.edu%@",picstr];
        NSURL *url = [NSURL URLWithString:picstr];
        NSData *imagedata = [[NSData alloc] initWithContentsOfURL:url];
        pic = [[UIImage alloc] initWithData:imagedata];
    }
    [self.tableView reloadData];
}

-(void)loadsearchrequest
{
    NSString *search = [instructorname stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]];
    
    search = [search stringByReplacingOccurrencesOfString:@" " withString:@"+"];
    
    NSURL *searchreq = [[NSURL alloc] initWithString:[NSString stringWithFormat:
                                                      @"http://prinweb.prin.edu/hagus/index.php3?eDir_search=%@&campus_search=elsah&gobutton=++++Search++++",search]];
    SMWebRequest * request = [SMWebRequest requestWithURL:searchreq];
    
    [request addTarget:self action:@selector(ParseFlashy:) forRequestEvents:SMWebRequestEventComplete];
    [request addTarget:self action:@selector(requestError) forRequestEvents:SMWebRequestEventError];
    [request start];
}

- (void)viewDidLoad
{
    self.navigationController.navigationBar.tintColor = [UIColor colorWithRed:0.0 green:0.212 blue:0.416 alpha:1.0];
    if ([self execSearch]) {
        [self loadsearchrequest];
    }
    
    NSString *days2 = [[tableViewArray objectAtIndex:0] objectForKey:@"DAYS2"];
    int i;
    if ([days2 isEqual: @""]) i = 2;
    else i = 4;
    [super viewDidLoad];
    headers = [[NSArray alloc] initWithObjects:
               @"Title",@"Instructor", @"Day, Time & Location", @"Description", @"Other Info", @"Attributes", nil];
    rowcount = [[NSArray alloc] initWithObjects:
                [NSNumber numberWithInt:2],
                [NSNumber numberWithInt:1],
                [NSNumber numberWithInt:i],
                [NSNumber numberWithInt:1],
                [NSNumber numberWithInt:3],
                [NSNumber numberWithInt:1],
                nil];
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark - Table view data source

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    // Return the number of sections.
    return [rowcount count];
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    // Return the number of rows in the section.
    return [[rowcount objectAtIndex:section] integerValue];
}

-(int)getTextHeight:(NSString *)astr {
    int width=250;
    if ((self.interfaceOrientation==UIInterfaceOrientationLandscapeLeft) || (self.interfaceOrientation==UIInterfaceOrientationLandscapeRight))
        width=415;
    CGSize constraint = CGSizeMake(width, 20000.0f);
    CGSize size = [astr sizeWithFont:[UIFont fontWithName:@"Helvetica" size:(CGFloat)17] constrainedToSize:constraint lineBreakMode:UILineBreakModeWordWrap];
    return size.height;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if ([indexPath section]==1) {
        return 100;
    }
    else if ([indexPath section]==3) {
        NSDictionary *rowdata = [tableViewArray objectAtIndex:0];
        int height=[self getTextHeight :[rowdata objectForKey:@"DESCRIP"]];
        return height;
    }
    else
        return 30;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    NSUInteger row = 0;
    // Set the text of the cell to the row index.
    NSDictionary *rowdata = [tableViewArray objectAtIndex:row];

    UITableViewCell *cell;
    if (indexPath.section==1) {
        cell = [tableView dequeueReusableCellWithIdentifier:@"csumpic"];
        if (!cell)
            cell = [[[NSBundle mainBundle] loadNibNamed:@"csumpic" owner:self options:nil] lastObject];
    }
    else {
        cell = [tableView dequeueReusableCellWithIdentifier:@"Cell"];
        if (cell == nil) {
            cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:@"Cell"];
        }
    }
    
    switch (indexPath.section){
        case 0:{
            if (indexPath.row == 0) {
                cell.textLabel.text = [rowdata objectForKey:@"TITLE"];
            }
            
            if (indexPath.row == 1) {
                NSString *subject = [rowdata objectForKey:@"SUBJECT"];
                int coursenumber = [[rowdata objectForKey:@"NUMBER"] intValue];
                NSString *section = [rowdata objectForKey:@"SECTION"];
                NSString *number = [NSString stringWithFormat:@"%d", coursenumber];
                NSArray *tempArray = [NSArray arrayWithObjects:subject, number, section, nil];
                NSString *temp = @"";
                temp = [temp stringByAppendingString:[tempArray componentsJoinedByString:@" "]];
                cell.textLabel.text = temp;
            }
        }
            break;
        case 1:
            if (indexPath.row == 0){
                NSString *instructor = [rowdata objectForKey:@"INSTRUCTOR"];
                [(UILabel *)[cell viewWithTag:100] setText:instructor];
                [((UIImageView *)[cell viewWithTag:101]) setImage:pic];
                [(UILabel *)[cell viewWithTag:102] setText:instemail];
            }
            break;
        case 2:
            if (indexPath.row == 0){
                NSString *days = [rowdata objectForKey:@"DAYS"];
                NSString *time = [rowdata objectForKey:@"TIME"];
                NSArray *tempArray = [NSArray arrayWithObjects:days, time, nil];
                NSString *temp = @"";
                temp = [temp stringByAppendingString:[tempArray componentsJoinedByString:@" "]];
                cell.textLabel.text = temp;
            }
            if (indexPath.row == 1){
                NSString *bldg = [rowdata objectForKey:@"BLDG"];
                NSString *room = [rowdata objectForKey:@"ROOM"];
                NSArray *tempArray = [NSArray arrayWithObjects:bldg, room, nil];
                NSString *temp = @"";
                temp = [temp stringByAppendingString:[tempArray componentsJoinedByString:@" "]];
                cell.textLabel.text = temp;
            }
            if (indexPath.row == 2){
                NSString *days2 = [rowdata objectForKey:@"DAYS2"];
                NSString *time2 = [rowdata objectForKey:@"TIME2"];
                NSArray *tempArray = [NSArray arrayWithObjects:days2, time2, nil];
                NSString *temp = @"";
                temp = [temp stringByAppendingString:[tempArray componentsJoinedByString:@" "]];
                cell.textLabel.text = temp;
            }
            if (indexPath.row == 3){
                NSString *bldg2 = [rowdata objectForKey:@"BLDG2"];
                NSString *room2 = [rowdata objectForKey:@"ROOM2"];
                NSArray *tempArray = [NSArray arrayWithObjects:bldg2, room2, nil];
                NSString *temp = @"";
                temp = [temp stringByAppendingString:[tempArray componentsJoinedByString:@" "]];
                cell.textLabel.text = temp;
            }
            break;
        case 3:
            if (indexPath.row == 0){
                NSString *descrip = [rowdata objectForKey:@"DESCRIP"];
                cell.textLabel.numberOfLines = 0;
                cell.textLabel.text = descrip;
            }
            break;
        case 4:
            if (indexPath.row == 0){
                int fee = [[rowdata objectForKey:@"FEE"] intValue];
                BOOL hasFee = FALSE;
                if (fee != 0) hasFee = TRUE;
                if (fee){
                    cell.textLabel.text = [NSString stringWithFormat:@"Fee: %d", fee];
                } else {
                    cell.textLabel.text = @"No Fee";
                }
            }
            if (indexPath.row == 1){
                NSString *prereq = [rowdata objectForKey:@"PREREQ"];
                BOOL hasPrereq =  TRUE;
                if ([prereq isEqual:@""]) hasPrereq = FALSE;
                if (hasPrereq){
                    cell.textLabel.text = @"Prerequisite: Y";
                } else {
                    cell.textLabel.text = @"Prerequisite: N";
                }
            }
            if (indexPath.row == 2){
                NSString *opento = [rowdata objectForKey:@"OPENTO"];
                NSString *opener = @"Open to: ";
                NSString *temp = [opener stringByAppendingString:opento];
                cell.textLabel.text = temp;
            }
            break;
        case 5:
            if (indexPath.row == 0){
                NSString *att1 = [rowdata objectForKey:@"ATT1"];
                NSString *att2 = [rowdata objectForKey:@"ATT2"];
                NSString *att3 = [rowdata objectForKey:@"ATT3"];
                NSString *att4 = [rowdata objectForKey:@"ATT4"];
                NSArray *tempArray = [NSArray arrayWithObjects:att1, att2, att3, att4, nil];
                NSString *temp = @"";
                temp = [temp stringByAppendingString:[tempArray componentsJoinedByString:@" "]];
                cell.textLabel.text = temp;
            }
            break;
        default:
            break;
            }

        return cell;
    }

- (NSString *)tableView:(UITableView *)tableView titleForHeaderInSection:(NSInteger)section{
    return [headers objectAtIndex:section];
    }

/*
 // Override to support conditional editing of the table view.
 - (BOOL)tableView:(UITableView *)tableView canEditRowAtIndexPath:(NSIndexPath *)indexPath
 {
 // Return NO if you do not want the specified item to be editable.
 return YES;
 }
 */

/*
 // Override to support editing the table view.
 - (void)tableView:(UITableView *)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath *)indexPath
 {
 if (editingStyle == UITableViewCellEditingStyleDelete) {
 // Delete the row from the data source
 [tableView deleteRowsAtIndexPaths:@[indexPath] withRowAnimation:UITableViewRowAnimationFade];
 }
 else if (editingStyle == UITableViewCellEditingStyleInsert) {
 // Create a new instance of the appropriate class, insert it into the array, and add a new row to the table view
 }
 }
 */

/*
 // Override to support rearranging the table view.
 - (void)tableView:(UITableView *)tableView moveRowAtIndexPath:(NSIndexPath *)fromIndexPath toIndexPath:(NSIndexPath *)toIndexPath
 {
 }
 */

/*
 // Override to support conditional rearranging of the table view.
 - (BOOL)tableView:(UITableView *)tableView canMoveRowAtIndexPath:(NSIndexPath *)indexPath
 {
 // Return NO if you do not want the item to be re-orderable.
 return YES;
 }
 */

#pragma mark - Table view delegate

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    // Navigation logic may go here. Create and push another view controller.
    /*
     <#DetailViewController#> *detailViewController = [[<#DetailViewController#> alloc] initWithNibName:@"<#Nib name#>" bundle:nil];
     // ...
     // Pass the selected object to the new view controller.
     [self.navigationController pushViewController:detailViewController animated:YES];
     */
}

@end
